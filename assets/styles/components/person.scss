// Styles
// name mixin after scss person
@mixin person($type: "") {
    // get Basesize in correct relation to design width
    $BS: getBaseSize($type);
    .person {
        color: $YellowDarkest;
        background-image: radial-gradient(circle at center, $Yellow 0, $YellowDarkest 100vmin);
        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
            span {
                display: inline-block;
                font-family: $FontFamilyMain;
                font-weight: 400;
            }
        }
        h2,
        h3,
        h4,
        h5,
        h6 {
            span {
                margin-left: $BS * 14;
            }
        }
        p {
            span {
                display: inline-block;
                font-family: $FontFamilyTitle;
                margin-right: $BS * 12;
            }
        }
        &__wrapper {
            h1 {
                span {
                    @include bsFontSize($BS, 60);
                }
            }
            h2 {
                line-height: 100%;
                margin-bottom: $BS * 20;
                &+p {
                    margin-top: 0;
                    margin-bottom: $BS * 64;
                }
            }
        }
        &__helloContainer {
            margin-top: $BS *32;
            display: flex;
            align-content: center;
            label {
                flex: 1;
                position: relative;
                margin: 0 $BS*16;
                @include bsFontSize($BS, 8);
                line-height: 100%;
                span {
                    position: absolute;
                    top: 0;
                    left: $BS * 16;
                    transform: translateY(calc(-100% - #{$BS} * 4));
                }
            }
            div {
                display: flex;
                flex-direction: row;
                align-items: center;
            }
            p {
                margin: 0;
            }
            input {
                box-sizing: border-box;
                height: 100%;
                width: 100%;
                min-width: $BS * 256;
                border: none;
                padding: $BS*4 $BS*16;
                appearance: none;
                outline: solid $BS*4 transparent;
                transition: outline 0.3s ease-out;
                background-color: $White;
                &:focus {
                    border: none;
                    outline: solid $BS*4 $BlueDark;
                }
                &.error {
                    outline: solid $BS*4 $Violet;
                }
            }
            .button {
                margin-bottom: 0;
                border: solid $BS*3 $Yellow;
            }
        }
        &__helloWrapper {
            position: relative;
            display: flex;
            flex-direction: column;
            align-content: center;
            justify-content: center;
            margin: $BS*32 0 $BS*64;
            padding: $BS*32 $BS*32 $BS*32;
            background-color: $YellowDarkest;
            color: $Yellow;
        }
    }
}

// Add person
@include person();
// Add basic person with breakpoints
@each $Breakpoint in $Breakpoints {
    @include breakpoint(#{$Breakpoint}) {
        @include person(#{$Breakpoint});
    }
}