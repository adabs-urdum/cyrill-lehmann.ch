// Styles
// name mixin after scss controls
@mixin controls($type: "") {
  // get Basesize in correct relation to design width
  $BS: getBaseSize($type);
  .controls {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    &__close {
      position: absolute;
      top: $BS * 64;
      left: $BS * 64;
      z-index: 2;
      @include bsFontSize($BS, 20);
      &--portfolio {
        .controls {
          &__icon {
            &--close {
              color: $Blue;
              &:after {
                border-color: $Blue;
              }
              &:hover {
                background-color: $Blue;
                color: $BlueDarkest;
                &:after {
                  background-color: $Blue;
                }
              }
            }
          }
        }
      }
      &--tour {
        .controls {
          &__icon {
            &--close {
              color: $Green;
              &:after {
                border-color: $Green;
              }
              &:hover {
                background-color: $Green;
                color: $GreenDarkest;
                &:after {
                  background-color: $Green;
                }
              }
            }
          }
        }
      }
    }
    &__icon {
      padding: $BS * 16 $BS * 24 $BS * 15;
      line-height: 100%;
      margin: 0;
      &--shittyBrowser {
        background-color: transparent;
        z-index: 1;
        &:hover {
          background-color: $Blue;
        }
      }
      &--close {
        color: $Blue;
        padding: $BS * 16 $BS * 22;
        box-shadow: none;
        &:after {
          border-color: $Blue;
        }
        &:hover {
          color: $BlueDarkest;
          &:after {
            background-color: $Blue;
          }
        }
      }
    }
    &__fullscreen {
      position: absolute;
      top: $BS * 64;
      left: $BS * 64;
      width: $BS * 52;
      height: $BS * 52;
      z-index: 1;
      .button {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        padding: 0;
        margin: 0;
      }

      &:before,
      &:after {
        content: "";
        position: absolute;
        top: $BS * 16;
        right: $BS * 16;
        width: calc(30% - #{$BS} * 6);
        height: calc(30% - #{$BS} * 6);
        border-right: solid $Blue $BS * 3;
        border-top: solid $Blue $BS * 3;
        pointer-events: none;
        transition: transform 0.25s ease-out;
        transition-delay: 0.75s;
      }

      &:after {
        top: auto;
        right: auto;
        bottom: $BS * 16;
        left: $BS * 16;
        border-right: none;
        border-top: none;
        border-left: solid $Blue $BS * 3;
        border-bottom: solid $Blue $BS * 3;
      }

      &:hover {
        &:before,
        &:after {
          border-color: $BlueDarkest;
        }
      }

      &.active {
        &:after {
          transform: rotate(180deg) translate(35%, -35%);
        }
        &:before {
          transform: rotate(180deg) translate(-35%, 35%);
        }
      }
    }
    &__shittyBrowser {
      position: absolute;
      top: $BS * 64;
      right: $BS * 64;
      z-index: 1;
      &Text {
        position: absolute;
        top: 50%;
        left: 0;
        white-space: nowrap;
        color: $Yellow;
        transform: translate(-100%, -50%);
        opacity: 0;
        transition: opacity 0.15s ease-out, transform 0.15s ease-out;
        z-index: -1;
        pointer-events: none;
      }
      &Checkbox {
        display: none;
        &:checked {
          & ~ .controls {
            &__icon {
              &--shittyBrowser {
                color: $BlueDarkest;
                background-color: $Blue;
              }
            }
          }
          & ~ .controls__shittyBrowser {
            &Text {
              opacity: 1;
              transform: translate(calc(-100% - #{$BS} * 16), -50%);
            }
          }
        }
      }
    }
  }
}

// Add controls
@include controls();
// Add basic controls with breakpoints
@each $Breakpoint in $Breakpoints {
  @include breakpoint(#{$Breakpoint}) {
    @include controls(#{$Breakpoint});
  }
}

@include breakPointM() {
  $BS: getBaseSize("M");
  .controls {
    &__close {
      top: $BS * 32;
      left: $BS * 32;
    }
  }
}

@include breakPointS() {
  $BS: getBaseSize("S");
  .controls {
    &__close {
      top: $BS * 32;
      left: $BS * 32;
    }
  }
}

@include breakPointXS() {
  $BS: getBaseSize("XS");
  .controls {
    &__close {
      top: $BS * 32;
      left: $BS * 32;
    }
  }
}
